geom_hline(y=h, color="white") +
geom_vline(x=as.numeric(dfMed$date) - 15, color="white") +
scale_x_date(labels=date_format("%b'%y"), expand=c(0, 0)) +
scale_y_continuous(labels=comma, expand=c(0, 0)) +
labs(title="Total Medical Member Months", x="Month", y="Member months (1,000s)") +
scale_fill_brewer("Payer", palette="Dark2")
h <- seq(0, max(aggregate(sumMemberMonthsThousands ~ date, data=dfMed, sum)[,2]), 100)
ggplot(dfMed, aes(x=date, y=sumMemberMonthsThousands, fill=payer)) +
geom_bar(stat="identity") +
geom_hline(y=h, color="white") +
scale_x_date(labels=date_format("%b'%y"), expand=c(0, 0)) +
scale_y_continuous(labels=comma, expand=c(0, 0)) +
labs(title="Total Medical Member Months", x="Month", y="Member months (1,000s)") +
scale_fill_brewer("Payer", palette="Dark2")
require(xtable, quietly=TRUE)
require(ggplot2, quietly=TRUE)
df <- data.frame(
t1=c(1486, 1221, 1286, 1693, NA, 1350, 1048, 841, 791, 740, 638, 529, 556, 583)
t2=c(480, 461, 500, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
t3=c(207, 258, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
t4=c(122, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA))
df <- data.frame(
t1=c(1486, 1221, 1286, 1693, NA, 1350, 1048, 841, 791, 740, 638, 529, 556, 583),
t2=c(480, 461, 500, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t3=c(207, 258, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t4=c(122, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA))
rstudio::viewData(df)
df <- data.frame(
year=c(2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000)
t1=c(1486, 1221, 1286, 1693, NA, 1350, 1048, 841, 791, 740, 638, 529, 556, 583),
t2=c(480, 461, 500, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t3=c(207, 258, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t4=c(122, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA))
df <- data.frame(
year=c(2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000),
t1=c(1486, 1221, 1286, 1693, NA, 1350, 1048, 841, 791, 740, 638, 529, 556, 583),
t2=c(480, 461, 500, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t3=c(207, 258, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t4=c(122, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA))
rstudio::viewData(df)
df <- data.frame(
year=c(2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000),
t1=c(1486, 1221, 1286, 1693, NA, 1350, 1048, 841, 791, 740, 638, 529, 556, 583),
t2=c(480, 461, 500, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t3=c(207, 258, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t4=c(122, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA))
df$applicants <- sum(t1, t2, t3, t4)
df$spots <- rep(270, nrow(df))
df <- data.frame(
year=c(2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000),
t1=c(1486, 1221, 1286, 1693, NA, 1350, 1048, 841, 791, 740, 638, 529, 556, 583),
t2=c(480, 461, 500, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t3=c(207, 258, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t4=c(122, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA))
df$applicants <- sum(df$t1, df$t2, df$t3, df$t4)
df$spots <- rep(270, nrow(df))
rstudio::viewData(df)
df <- data.frame(
year=c(2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000),
t1=c(1486, 1221, 1286, 1693, NA, 1350, 1048, 841, 791, 740, 638, 529, 556, 583),
t2=c(480, 461, 500, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t3=c(207, 258, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t4=c(122, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA))
df$applicants <- df$t1 + df$t2 + df$t3 + df$t4)
df$spots <- rep(270, nrow(df))
df <- data.frame(
year=c(2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000),
t1=c(1486, 1221, 1286, 1693, NA, 1350, 1048, 841, 791, 740, 638, 529, 556, 583),
t2=c(480, 461, 500, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t3=c(207, 258, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t4=c(122, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA))
df$applicants <- df$t1 + df$t2 + df$t3 + df$t4
df$spots <- rep(270, nrow(df))
rstudio::viewData(df)
df <- data.frame(
year=c(2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000),
t1=c(1486, 1221, 1286, 1693, NA, 1350, 1048, 841, 791, 740, 638, 529, 556, 583),
t2=c(480, 461, 500, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t3=c(207, 258, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
t4=c(122, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA))
df$applicants <- sum(df$t1, df$t2, df$t3, df$t4, na.rm=TRUE)
df$spots <- rep(270, nrow(df))
rstudio::viewData(df)
?sapply
aggregate(c(t1, t2, t3, t4), data=df, sum)
sapply(c(df$t1, df$t2, df$t3, df$t4), sum)
?matrix
M <- matrix(
data=c(
2013, 1, 1486,
2013, 2,  480,
2013, 3,  207,
2013, 4,  122,
2012, 1, 1221,
2012, 2,  461,
2012, 3,  258,
2011, 1, 1286,
2011, 2,  500,
2010, 1, 1693,
2008, 1, 1350,
2007, 1, 1048,
2006, 1,  841,
2005, 1,  791,
2004, 1,  740,
2003, 1,  638,
2002, 1,  529,
2001, 1,  556,
2000, 1,  583
),
ncol=3)
df <- data.frame(M)
names(df) <- c("year", "tickets", "applicants")
rstudio::viewData(M)
M <- matrix(
data=c(
2013, 1, 1486,
2013, 2,  480,
2013, 3,  207,
2013, 4,  122,
2012, 1, 1221,
2012, 2,  461,
2012, 3,  258,
2011, 1, 1286,
2011, 2,  500,
2010, 1, 1693,
2008, 1, 1350,
2007, 1, 1048,
2006, 1,  841,
2005, 1,  791,
2004, 1,  740,
2003, 1,  638,
2002, 1,  529,
2001, 1,  556,
2000, 1,  583
),
ncol=3, byrow=TRUE)
df <- data.frame(M)
names(df) <- c("year", "tickets", "applicants")
rstudio::viewData(M)
rstudio::viewData(df)
rstudio::viewData(df)
total <- sapply(df$applicants ~ df$year, sum)
total <- aggregate(applicants ~ year, data=df, sum)
total
merge(df, total, by=year)
merge(df, total, by="year")
total <- aggregate(applicants ~ year, data=df, sum)
names(total[, 2]) <- "total"
merge(df, total, by="year")
rstudio::viewData(df)
merge(df, total, by="year")
names(total[, 2]) <- "total"
total
names(total)
total[,2]
names(total$applicants) <- "total"
total
names(total <- c("year", "total"))
names(total) <- c("year", "total")
head(total)
total <- aggregate(applicants ~ year, data=df, sum)
names(total$applicants) <- "total"
merge(df, total, by="year")
total <- aggregate(applicants ~ year, data=df, sum)
names(total) <- c("year", "total")
df <- merge(df, total, by="year")
head)df
head(df)
total <- aggregate(applicants ~ year, data=df, sum)
names(total) <- c("year", "totalApplicants")
df <- merge(df, total, by="year")
df$totalTickets <- df$tickets * df$totalApplicants
df$prob <- df$tickets / df$totalTickets
rstudio::viewData(df)
totalTickets <- aggregate(applicants * tickets ~ year, data=df, sum)
totalTickets <- aggregate(applicants * tickets ~ year, data=df, sum)
names(totalTickets) <- c("year", "totalTickets")
df <- merge(df, totalTickets, by="year")
rstudio::viewData(df)
df$prob <- df$tickets / df$totalTickets
rstudio::viewData(df)
M <- matrix(
data=c(
2013, 1, 1486,
2013, 2,  480,
2013, 3,  207,
2013, 4,  122,
2012, 1, 1221,
2012, 2,  461,
2012, 3,  258,
2011, 1, 1286,
2011, 2,  500,
2010, 1, 1693,
2008, 1, 1350,
2007, 1, 1048,
2006, 1,  841,
2005, 1,  791,
2004, 1,  740,
2003, 1,  638,
2002, 1,  529,
2001, 1,  556,
2000, 1,  583
),
ncol=3, byrow=TRUE)
df <- data.frame(M)
names(df) <- c("year", "tickets", "applicants")
totalApplicants <- aggregate(applicants ~ year, data=df, sum)
names(totalApplicants) <- c("year", "totalApplicants")
df <- merge(df, totalApplicants, by="year")
totalTickets <- aggregate(applicants * tickets ~ year, data=df, sum)
names(totalTickets) <- c("year", "totalTickets")
df <- merge(df, totalTickets, by="year")
rstudio::viewData(df)
df$prob <- df$tickets / df$totalTickets
rstudio::viewData(df)
rstudio::viewData(df)
df$applicants[df$year=="2013" & df$tickets==1]
df$totalApplicants[df$year=="2013" & df$tickets==1]
install.packages("sna")
g <- rgrahp(5)
require(sna)
g <- rgraph(5)
g
plot(g)
gplot(g)
g <- rgraph(10)
g
gplot(g)
gplot3d(g)
g <- rgraph(100, mode="graph")
gplot(g)
g <- rgraph(25, mode="graph")
gplot(g)
g
gplot(g, mode="graph")
gplot(g, gmode="graph")
gplot(g, gmode="graph", mode="kamadakawaii")
gplot(g, gmode="graph", mode="kamadakawai")
?rbern
?rbinom
?matric
?matrix
r <- 1e2
c <- 1e2
size <- r * c
x <- rbinom(size / 2, 1, 0.5)
z <- rnorm(size / 2)
X <- matrix(x, nrow=r, ncol=c / 2)
Z <- matrix(z, nrow=r, ncol=c / 2)
TestData <- data.frame(X, Z)
View(TestData)
View(TestData)
names <- as.character(seq(1, c))
names
names <- paste("x", as.character(seq(1, c), sep="")
names <- paste("x", as.character(seq(1, c)), sep="")
names
r <- 1e2
c <- 1e2
chalf <- c / 2
size <- r * chalf
x <- rbinom(size, 1, 0.5)
z <- rnorm(size)
X <- matrix(x, nrow=r, ncol=chalf)
Z <- matrix(z, nrow=r, ncol=chalf)
TestData <- data.frame(X, Z)
names(TestData) <- paste("x", as.character(seq(1, c)), sep="")
View(TestData)
?Sys.time
system.time(save("e:\TEST\TestData.RData"))
system.time(save("h:\CHSE\TEST\TestData.RData"))
system.time(save("e:/TEST/TestData.RData"))
system.time(save("h:/CHSE/TEST/TestData.RData"))
?save
system.time(save(TestData, file="e:/TEST/TestData.RData"))
system.time(save(TestData, file="h:/CHSE/TEST/TestData.RData"))
time.server <- system.time(save(TestData, file="e:/TEST/TestData.RData"))
time.Hdrive <- system.time(save(TestData, file="h:/CHSE/TEST/TestData.RData"))
time.server
names(time.server)
system.time(read(TestData, file="e:/TEST/TestData.RData"))
?save
system.time(load(TestData, file="e:/TEST/TestData.RData"))
system.time(load(file="e:/TEST/TestData.RData"))
pbirthday(n= 17, classes = 365, coincident = 2)
pbirthday(n= 21, classes = 365, coincident = 2)
pbirthday(n= 27, classes = 365, coincident = 2)
pbirthday(n= 24, classes = 365, coincident = 2)
qbirthday(prob=0.5, classes=365, coincident=2)
?qbirthday
friendship_data_frame <- read.table('http://sna.stanford.edu/sna_R_labs/data/Krack-High-Tec-edgelist-Friendship.txt')
View(friendship_data_frame)
friendship_data_frame <- read.table('http://sna.stanford.edu/sna_R_labs/data/Krack-High-Tec-edgelist-Friendship.txt')
colnames(friendship_data_frame) <- c('ego', 'alter', 'friendship_tie')
head(friendship_data_frame)
require(stats)
by(warpbreaks[, 1:2], warpbreaks[,"tension"], summary)
by(warpbreaks[, 1],   warpbreaks[, -1],       summary)
by(warpbreaks, warpbreaks[,"tension"],
function(x) lm(breaks ~ wool, data = x))
head(warpbreaks)
tmp <- with(warpbreaks,
by(warpbreaks, tension,
function(x) lm(breaks ~ wool, data = x)))
sapply(tmp, coef)
tmp
?sapply
coef(tmp)
?coef
?sample
n <- 200  # Number of bibs
i <- 5  # Number of races
S <- sample(seq(1:n), n)
S
?matrix
matrix(nrow=2, ncol=2)
n <- 200  # Number of bibs
r <- 5  # Number of races
S <- matirx(nrow=n, ncol=r)
for (i in 1:r) {
S[, i] <- sample(seq(1:n), n)
}
n <- 200  # Number of bibs
r <- 5  # Number of races
S <- matrix(nrow=n, ncol=r)
for (i in 1:r) {
S[, i] <- sample(seq(1:n), n)
}
head(S)
n <- 200  # Number of bibs
r <- 5  # Number of races
S <- matrix(nrow=n, ncol=r, dimnames=c("Draw", "Race"))
for (i in 1:r) {
S[, i] <- sample(seq(1:n), n)
}
S <- data.frame(S)
names(S) <- c("Race1", "Race2", "Race3", "Race4", "Race5")
n <- 200  # Number of bibs
r <- 5  # Number of races
S <- matrix(nrow=n, ncol=r, dimnames=list("Draw", "Race"))
for (i in 1:r) {
S[, i] <- sample(seq(1:n), n)
}
S <- data.frame(S)
names(S) <- c("Race1", "Race2", "Race3", "Race4", "Race5")
list("Draw", "Race")
n <- 200  # Number of bibs
r <- 5  # Number of races
S <- matrix(nrow=n, ncol=r)
for (i in 1:r) {
S[, i] <- sample(seq(1:n), n)
}
S <- data.frame(S)
names(S) <- c("Race1", "Race2", "Race3", "Race4", "Race5")
View(S)
write.table(S, "RandomBibNumbers.txt", sep="\t")
setwd()
getwd()
?write.table
setwd("C:/Users/chanb/Dropbox/Sandbox/MedicareProviderCharge")
require(RCurl, quietly=TRUE)
require(xtable, quietly=TRUE)
require(ggplot2, quietly=TRUE)
require(scales, quietly=TRUE)
require(RColorBrewer, quietly=TRUE)
# url <- getURL("https://dl.dropboxusercontent.com/u/386956/Medicare_Provider_Charge_Inpatient_DRG100_FY2011.csv")
# df <- read.csv(textConnection(url), header=TRUE, sep=",")
df <- read.csv("Medicare_Provider_Charge_Outpatient_APC30_CY2011.csv", header=TRUE, sep=",")
table(df$apc)
table(df$APC)
df$APCnum <- as.numeric(substr(df$APC, 1, 4))
df$APCchar <- substr(df$APC, 1, 4)
df$APCdesc <- substr(df$APC, 4)
?substr
df$APCdesc <- substr(df$APC, nchar(df$APC))
nchar(df$APC)
nchar(as.character(df$APC))
df$APCdesc <- substr(df$APC, nchar(as.character(df$APC)))
?grep
df$APCdesc <- substr(df$APC, 8, nchar(as.character(df$APC)))
View(df)
df$APCnum <- as.numeric(substr(df$APC, 1, 4))
df$APCchar <- substr(df$APC, 1, 4)
df$APCdesc <- substr(df$APC, 8, nchar(as.character(df$APC)))
df$isOregon <- df$Provider.State == "OR"
df$isPDXmetro <- grepl("^OR - Portland", df$Hospital.Referral.Region.Description)
df$isOHSU <- grepl("^OHSU", df$Provider.Name)
View(df)
apc <- subset(df, isOHSU, select=c("APCnum", "APCchar", "APCdesc"))
View(apc)
apc <- subset(df, isOHSU, select=c(apc, APCnum, APCchar, APCdesc))
apc <- subset(df, isOHSU, select=c(APC, APCnum, APCchar, APCdesc))
View(apc)
apcOHSU <- as.vector(df$APCnum[df$isOHSU])
fix(apcOHSU)
apc <- subset(df, isOHSU, select=c(APC, APCnum, APCchar, APCdesc))
dfSubset <- subset(df, APCnum %in% apcOHSU)
names(dfSubset)
head(dfSubset)
DistnPlot <- function(d, t) {
ggplot(d, aes(x=APCchar, y=Average.Estimated.Submitted.Charges)) +
#     geom_boxplot(alpha=1/2, fill="grey", outlier.size=0) +
geom_violin(alpha=1/2, fill="grey") +
geom_jitter(data=d[d$isPDXmetro,], alpha=1/2, na.rm=TRUE) +
geom_point(data=d[d$isOHSU,], alpha=2/3, color=rgb(0, 73, 144, max=255), size=5) +
#     facet_wrap(~ type, ncol=1, scales="free") +
scale_y_log10(breaks=c(1E4, 2E4, 4E4, 8E4, 16E4, 32E4), labels=c("$10", "$20", "$40", "$80", "$160", "$320")) +
labs(title=t, x="APC", y="Average Estimated Submitted Charges ($1,000s)") +
theme_bw() +
theme(legend.position="bottom", panel.grid.major.x=element_blank(), panel.grid.major.y=element_line(color="grey"))
}
for (i in 1:length(apcOHSU)) {
j <- apcOHSU[i]
d <- subset(dfSubset, APCnum == j)
t <- paste("APC", apc$APCchar[i], apc$APCdesc[i])
show(DistnPlot(d, t))
}
DistnPlot <- function(d, t) {
ggplot(d, aes(x=APCchar, y=Average.Estimated.Submitted.Charges)) +
#     geom_boxplot(alpha=1/2, fill="grey", outlier.size=0) +
geom_violin(alpha=1/2, fill="grey") +
geom_jitter(data=d[d$isPDXmetro,], alpha=1/2, na.rm=TRUE) +
geom_point(data=d[d$isOHSU,], alpha=2/3, color=rgb(0, 73, 144, max=255), size=5) +
#     facet_wrap(~ type, ncol=1, scales="free") +
#     scale_y_log10(breaks=c(1E4, 2E4, 4E4, 8E4, 16E4, 32E4), labels=c("$10", "$20", "$40", "$80", "$160", "$320")) +
labs(title=t, x="APC", y="Average Estimated Submitted Charges ($1,000s)") +
theme_bw() +
theme(legend.position="bottom", panel.grid.major.x=element_blank(), panel.grid.major.y=element_line(color="grey"))
}
for (i in 1:length(apcOHSU)) {
j <- apcOHSU[i]
d <- subset(dfSubset, APCnum == j)
t <- paste("APC", apc$APCchar[i], apc$APCdesc[i])
show(DistnPlot(d, t))
}
ggplot(d, aes(x=APCchar, y=Average.Estimated.Submitted.Charges)) +
geom_violin(alpha=1/2, fill="grey") +
geom_jitter(data=d[d$isPDXmetro,], alpha=1/2, na.rm=TRUE) +
geom_point(data=d[d$isOHSU,], alpha=2/3, color=rgb(0, 73, 144, max=255), size=5) +
scale_y_log10(breaks=c(1E3, 2E3, 4E3, 8E3, 16E3), labels=c("$1", "$2", "$4", "$8", "$16")) +
labs(title=t, x="APC", y="Average Estimated Submitted Charges ($1,000s)") +
theme_bw() +
theme(legend.position="bottom", panel.grid.major.x=element_blank(), panel.grid.major.y=element_line(color="grey"))
ggplot(dfSubset, aes(x=APCchar, y=Average.Estimated.Submitted.Charges)) +
geom_violin(alpha=1/2, fill="grey") +
geom_jitter(data=d[d$isPDXmetro,], alpha=1/2, na.rm=TRUE) +
geom_point(data=d[d$isOHSU,], alpha=2/3, color=rgb(0, 73, 144, max=255), size=5) +
scale_y_log10(breaks=c(1E3, 2E3, 4E3, 8E3, 16E3), labels=c("$1", "$2", "$4", "$8", "$16")) +
labs(title=t, x="APC", y="Average Estimated Submitted Charges ($1,000s)") +
theme_bw() +
theme(legend.position="bottom", panel.grid.major.x=element_blank(), panel.grid.major.y=element_line(color="grey"))
ggplot(dfSubset, aes(x=APCchar, y=Average.Estimated.Submitted.Charges)) +
geom_violin(alpha=1/2, fill="grey") +
geom_jitter(data=dfSubset[dfSubset$isPDXmetro,], alpha=1/2, na.rm=TRUE) +
geom_point(data=dfSubset[dfSubset$isOHSU,], alpha=2/3, color=rgb(0, 73, 144, max=255), size=5) +
scale_y_log10(breaks=c(1E3, 2E3, 4E3, 8E3, 16E3), labels=c("$1", "$2", "$4", "$8", "$16")) +
labs(title=t, x="APC", y="Average Estimated Submitted Charges ($1,000s)") +
theme_bw() +
theme(legend.position="bottom", panel.grid.major.x=element_blank(), panel.grid.major.y=element_line(color="grey"))
ggplot(dfSubset, aes(x=APCchar, y=Average.Estimated.Submitted.Charges)) +
geom_violin(alpha=1/2, fill="grey") +
geom_jitter(data=dfSubset[dfSubset$isPDXmetro,], alpha=1/2, na.rm=TRUE) +
geom_point(data=dfSubset[dfSubset$isOHSU,], alpha=2/3, color=rgb(0, 73, 144, max=255), size=5) +
scale_y_log10(breaks=c(250, 500, 1E3, 2E3, 4E3, 8E3, 16E3), labels=c("$0.25", "$0.5", "$1", "$2", "$4", "$8", "$16")) +
labs(title=t, x="APC", y="Average Estimated Submitted Charges ($1,000s)") +
theme_bw() +
theme(legend.position="bottom", panel.grid.major.x=element_blank(), panel.grid.major.y=element_line(color="grey"))
ggplot(dfSubset, aes(x=APCchar, y=Average.Estimated.Submitted.Charges)) +
geom_violin(alpha=1/2, fill="grey") +
geom_jitter(data=dfSubset[dfSubset$isPDXmetro,], alpha=1/2, na.rm=TRUE) +
geom_point(data=dfSubset[dfSubset$isOHSU,], alpha=2/3, color=rgb(0, 73, 144, max=255), size=5) +
scale_y_log10(breaks=c(250, 500, 1E3, 2E3, 4E3, 8E3, 16E3), labels=c("$0.25", "$0.5", "$1", "$2", "$4", "$8", "$16")) +
labs(x="APC", y="Average Estimated Submitted Charges ($1,000s)") +
theme_bw() +
theme(legend.position="bottom", panel.grid.major.x=element_blank(), panel.grid.major.y=element_line(color="grey"))
View(apc)
apc[, c("APCchar", "APCdesc")]
xtable(apc[, c("APCchar", "APCdesc")])
xtable(data.frame(apc[, c("APCchar", "APCdesc")]))
?xtable
?print.xtable
print(xtable(apc[, c("APCchar", "APCdesc")]), include.rownames=FALSE)
print(xtable(apc[, c("APCchar", "APCdesc")]), include.rownames=FALSE, type="html")
source('~/.active-rstudio-document', echo=TRUE)
View(drg)
View(drg)
View(d)
View(d)
View(drg)
drglist <- subset(drg, drg %in% d$DRGnum, select=c(drg, drglab))
View(drglist)
print(xtable(drglab, include.rownames=FALSE), type="html")
drglab <- subset(drg, drg %in% d$DRGnum, select=c(drg, drglab))
print(xtable(drglab, include.rownames=FALSE), type="html")
?print.xtable
?order
?order
?sort
drglab <- drglab[sort(drglab$drg),]
View(drg)
View(drglab)
i <- 1
j <- mdcOHSU[i]
d <- subset(dfSubset, mdc == j)
t <- paste("MDC", mdc$mdc[mdc == j], mdc$mdclab[mdc == j])
drglab <- subset(drg, drg %in% d$DRGnum, select=c(drg, drglab))
View(drglab)
sort(drglab$drg)
drglab[sort(drglab$drg)]
drglab[sort(drglab$drg),]
order(drglab$drg)
drglab[order(drglab$drg),]
